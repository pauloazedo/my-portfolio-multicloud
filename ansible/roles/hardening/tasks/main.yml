---
# Security hardening tasks for all servers

# Step 1: Enable EPEL for access to Fail2Ban and other tools
- name: Install Oracle EPEL release (OL9)
  ansible.builtin.dnf:
    name: oracle-epel-release-el9
    state: present

- name: Enable EPEL repository
  ansible.builtin.command: dnf config-manager --enable ol9_developer_EPEL
  args:
    creates: /etc/yum.repos.d/oracle-epel-ol9.repo

# Step 2: Install Fail2Ban
- name: Install Fail2Ban
  ansible.builtin.package:
    name: fail2ban
    state: present

- name: Enable and start Fail2Ban service
  ansible.builtin.service:
    name: fail2ban
    enabled: true
    state: started

# Step 3: Deploy custom jail.local
- name: Deploy custom jail.local
  ansible.builtin.copy:
    src: jail.local
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: '0644'
  notify: Restart fail2ban

# Step 4: Install and configure iptables
- name: Install iptables and iptables-services
  ansible.builtin.package:
    name:
      - iptables
      - iptables-services
    state: present

- name: Enable and start iptables service
  ansible.builtin.service:
    name: iptables
    enabled: true
    state: started

# Step 5: Add iptables rules for HTTP/HTTPS if missing
- name: Check if HTTP rule exists
  ansible.builtin.shell: iptables -C INPUT -p tcp --dport 80 -j ACCEPT
  register: http_rule_check
  failed_when: false
  changed_when: false

- name: Add HTTP rule if missing
  ansible.builtin.command: iptables -A INPUT -p tcp --dport 80 -j ACCEPT
  when: http_rule_check.rc != 0

- name: Check if HTTPS rule exists
  ansible.builtin.shell: iptables -C INPUT -p tcp --dport 443 -j ACCEPT
  register: https_rule_check
  failed_when: false
  changed_when: false

- name: Add HTTPS rule if missing
  ansible.builtin.command: iptables -A INPUT -p tcp --dport 443 -j ACCEPT
  when: https_rule_check.rc != 0

# Step 6: Save iptables rules
- name: Save iptables rules to disk
  ansible.builtin.command: service iptables save
