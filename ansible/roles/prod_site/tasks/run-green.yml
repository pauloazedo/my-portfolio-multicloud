---
# ansible/roles/prod_site/tasks/run-green.yml
# Deploy the PROD Green container, with fallback if needed

############################################################
# Step 1: Remove existing green container (if any)
############################################################
- name: Remove existing green container
  community.docker.docker_container:
    name: "{{ prod_site_green_container }}"
    state: absent
    force_kill: true
  ignore_errors: true
  register: green_cleanup

- name: Log cleanup result
  ansible.builtin.debug:
    msg: "Removed existing green container: {{ green_cleanup.changed }}"

############################################################
# Step 2: Run green container with real image (if available)
############################################################
- name: Run green container with real image
  community.docker.docker_container:
    name: "{{ prod_site_green_container }}"
    image: "{{ prod_site_green_image }}"
    restart_policy: always
    published_ports:
      - "{{ prod_site_green_port }}:3000"
    recreate: true
    state: started
  when: green_image_available | default(false)

############################################################
# Step 3: Run green container with fallback image (if needed)
############################################################
- name: Run green container with fallback image
  community.docker.docker_container:
    name: "{{ prod_site_green_container }}"
    image: "{{ prod_site_waiting_image }}"
    restart_policy: always
    published_ports:
      - "{{ prod_site_green_port }}:3000"
    recreate: true
    state: started
    env:
      FALLBACK_COLOR: green
  when: not green_image_available | default(false)
  tags: fallback
