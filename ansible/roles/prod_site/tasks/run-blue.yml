# ansible/roles/prod_site/tasks/run-blue.yml

#####################################################################
# Step 1: Remove existing blue container
#####################################################################
- name: Remove existing blue container if present
  community.docker.docker_container:
    name: "{{ prod_site_blue_container }}"
    state: absent
    force_kill: true
  register: blue_cleanup
  ignore_errors: true

- name: Log blue container cleanup result
  ansible.builtin.debug:
    msg: "Removed existing blue container: {{ blue_cleanup.changed }}"

#####################################################################
# Step 2: Run blue container with main image
#####################################################################
- name: Run blue container with versioned image ({{ prod_site_image }})
  community.docker.docker_container:
    name: "{{ prod_site_blue_container }}"
    image: "{{ prod_site_image }}"
    restart_policy: always
    published_ports:
      - "{{ prod_site_blue_port }}:3000"
    recreate: true
    state: started
    env:
      NEXT_PUBLIC_APP_VERSION: "{{ prod_site_tag }}"
      NEXT_PUBLIC_CLOUD_PROVIDER: "{{ cloud_provider | upper }}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  when: blue_image_available | bool
  tags: [prod_site, deploy]

- name: Log skipping blue deploy – image not available
  ansible.builtin.debug:
    msg: "Blue image not available — fallback container will be used."
  when: not blue_image_available | default(false) | bool
  tags: [prod_site, fallback]

#####################################################################
# Step 3: Run fallback blue container
#####################################################################
- name: Run blue container with fallback image
  community.docker.docker_container:
    name: "{{ prod_site_blue_container }}"
    image: "{{ prod_site_waiting_image }}"
    restart_policy: always
    published_ports:
      - "{{ prod_site_blue_port }}:3000"
    recreate: true
    state: started
    env: "{{ prod_site_blue_env | default({}) }}"
  when: not blue_image_available | default(false) | bool
  tags: [prod_site, fallback]
