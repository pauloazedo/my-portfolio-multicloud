# ansible/roles/prod_site/tasks/check_images.yml
# Pull and verify availability of versioned image for blue/green deployment

#####################################################################
# Step 1: Try pulling the versioned image
#####################################################################
- name: "Try to pull versioned image (tag: {{ latest_prod_site_tag }})"
  community.docker.docker_image:
    name: "{{ prod_site_tag }}"
    source: pull
  register: prod_image_pull
  failed_when: false
  ignore_errors: true
  tags: [fallback, prod_site]

#####################################################################
# Step 2: Inspect local presence of versioned image
#####################################################################
- name: "Inspect local image info (tag: {{ latest_prod_site_tag }})"
  community.docker.docker_image_info:
    name: "{{ prod_site_tag }}"
  register: prod_image_info
  failed_when: false
  changed_when: false
  tags: [fallback, prod_site]

#####################################################################
# Step 3: Set availability flags for both blue and green
#####################################################################
- name: Set image availability flags for both blue and green
  ansible.builtin.set_fact:
    green_image_available: "{{ (prod_image_info.images | length > 0) | default(false) }}"
    blue_image_available: "{{ (prod_image_info.images | length > 0) | default(false) }}"
  tags: [fallback, prod_site]

#####################################################################
# Step 4: Log results
#####################################################################
- name: Show image availability results
  ansible.builtin.debug:
    msg:
      - "Latest prod-site tag: {{ latest_prod_site_tag }}"
      - "Image available locally: {{ prod_image_info.images | length > 0 }}"
      - "Green image available: {{ green_image_available }}"
      - "Blue image available:  {{ blue_image_available }}"
  tags: [fallback, prod_site]
