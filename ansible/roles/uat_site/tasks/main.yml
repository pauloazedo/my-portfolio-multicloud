---
# UAT Site Deployment Entry Point

- name: Ensure Docker is installed on UAT
  ansible.builtin.include_role:
    name: docker

- name: Check if already logged into OCIR
  ansible.builtin.command: docker info
  register: docker_info_check
  failed_when: false
  changed_when: false

- name: Login to OCIR (if not already logged in)
  ansible.builtin.command:
    cmd: >
      docker login iad.ocir.io
      -u {{ ocir_user }}
      -p {{ ocir_token }}
  when: docker_info_check.stdout is not search('iad.ocir.io')
  no_log: true
  changed_when: false

- name: Stop and remove existing UAT site container (if any)
  community.docker.docker_container:
    name: "{{ uat_site_container }}"
    state: absent
    force_kill: true

- name: Try to pull UAT site image from OCIR
  community.docker.docker_image:
    name: "{{ uat_site_image }}"
    source: pull
  register: uat_image_pull
  failed_when: false
  ignore_errors: true

- name: Check if UAT site image exists locally
  community.docker.docker_image_info:
    name: "{{ uat_site_image }}"
  register: uat_local_image_info
  failed_when: false
  changed_when: false

- name: Set image availability flag
  ansible.builtin.set_fact:
    uat_image_available: "{{ uat_local_image_info.images | length > 0 }}"

- name: Show image pull result (optional)
  ansible.builtin.debug:
    var: uat_image_pull.msg

- name: Show image availability flag
  ansible.builtin.debug:
    msg: "âœ… UAT site image is available locally: {{ uat_image_available }}"

- name: Run UAT site container using pulled image
  ansible.builtin.import_tasks: run-real.yml
  when: uat_image_available | bool

- name: Fallback to waiting container if image is unavailable
  ansible.builtin.import_tasks: cleanup.yml
  when: not (uat_image_available | bool)
