---
# UAT Site Deployment Entry Point

- name: Ensure Docker is installed on UAT
  ansible.builtin.include_role:
    name: docker

- name: Check if already logged into OCIR
  ansible.builtin.command: docker info
  register: docker_info_check
  failed_when: false
  changed_when: false

- name: Login to OCIR (if not already logged in)
  ansible.builtin.command:
    cmd: >
      docker login iad.ocir.io
      -u {{ ocir_user }}
      -p {{ ocir_token }}
  when: "'Username: ' ~ ocir_user not in docker_info_check.stdout"
  no_log: true
  changed_when: false

- name: Stop and remove existing UAT site container (if any)
  community.docker.docker_container:
    name: "{{ uat_site_container }}"
    state: absent
    force_kill: true

- name: Attempt to pull UAT site image from OCIR
  community.docker.docker_image:
    name: "{{ uat_site_image }}"
    source: pull
  register: uat_image_pull
  ignore_errors: true
  failed_when: false

- name: Check if image exists locally
  community.docker.docker_image_info:
    name: "{{ uat_site_image }}"
  register: uat_local_image_info
  failed_when: false
  changed_when: false

- name: Set fact if image is available
  ansible.builtin.set_fact:
    uat_image_available: "{{ uat_local_image_info.images | length > 0 }}"

- name: Debug image pull result
  ansible.builtin.debug:
    msg: "Image pulled: {{ uat_image_pull.changed }}, Local image found: {{ uat_image_available }}"

- name: Include task to run real app if image is available
  ansible.builtin.import_tasks: run-real.yml
  when: uat_image_available | default(false)

- name: Include fallback cleanup tasks
  ansible.builtin.import_tasks: cleanup.yml
  when: not (uat_image_available | default(false))
