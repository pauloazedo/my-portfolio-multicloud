---
# Deploy the UAT site container (real application)

- name: Ensure previous UAT site container is removed
  community.docker.docker_container:
    name: "{{ uat_site_container }}"
    state: absent
    force_kill: true
  ignore_errors: true
  register: container_cleanup

- name: Log container removal status
  ansible.builtin.debug:
    msg: "Removed existing container '{{ uat_site_container }}': {{ container_cleanup.changed }}"

- name: Run UAT site container with the correct image and port
  community.docker.docker_container:
    name: "{{ uat_site_container }}"
    image: "{{ uat_site_image }}"
    restart_policy: always
    published_ports:
      - "{{ uat_site_port }}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    recreate: true
    state: started
    pull: false
  register: uat_container_result

- name: Log UAT container result
  ansible.builtin.debug:
    var: uat_container_result
