---
# Run and configure the Jenkins container

# Step 1: Check if Jenkins container exists
- name: Check if Jenkins container exists
  community.docker.docker_container_info:
    name: jenkins
  register: jenkins_status
  ignore_errors: true

# Step 2: Run Jenkins container if not already running
- name: Start Jenkins container if not running
  community.docker.docker_container:
    name: jenkins
    image: jenkins/jenkins:lts
    state: started
    restart_policy: always
    published_ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - "{{ jenkins_data_dir }}:/var/jenkins_home"
      - "{{ jenkins_plugins_txt }}:/usr/share/jenkins/ref/plugins.txt:ro"
      - "{{ jenkins_init_dir }}:/usr/share/jenkins/ref/init.groovy.d:ro"
    env:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
      JENKINS_ADMIN_USER: "{{ jenkins_admin_user }}"
      JENKINS_ADMIN_PASS: "{{ jenkins_admin_pass }}"
      GITHUB_TOKEN: "{{ github_token }}"
    user: root
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8080/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  when: >
    jenkins_status.container is not defined
    or jenkins_status.container is none
    or jenkins_status.container.State.Status != 'running'
