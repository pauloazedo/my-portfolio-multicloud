---
# Ensure Python 3.7+ is installed
- name: Ensure Python 3.7+ is installed and set as default
  ansible.builtin.dnf:
    name: python3
    state: present
  when: ansible_python.version.major < 3 or ansible_python.version.minor < 7

- name: Set Python 3 as the default interpreter for Ansible
  ansible.builtin.lineinfile:
    path: /etc/ansible/ansible.cfg
    regexp: '^interpreter_python'
    line: 'interpreter_python = /usr/bin/python3'
  when: ansible_python.version.major < 3 or ansible_python.version.minor < 7

# Update the system
- name: Update dnf cache and upgrade packages
  ansible.builtin.dnf:
    name: "*"
    state: present
  tags: update

# Install system packages needed for OCI login and Docker SDK
- name: Install prerequisites for Docker
  ansible.builtin.dnf:
    name:
      - ca-certificates
      - curl
      - gnupg
      - python3-pip
    state: present
    update_cache: true

# Ensure /etc/dnf/keyrings exists
- name: Create DNF keyrings directory
  ansible.builtin.file:
    path: /etc/dnf/keyrings
    state: directory
    mode: '0755'

# Remove conflicting legacy Docker repo files
- name: Remove conflicting Docker YUM repo files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/yum.repos.d/docker.repo
    - /etc/yum.repos.d/docker-ce.repo

# Download Docker GPG key
- name: Download Docker GPG key to /etc/dnf/keyrings
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/centos/gpg
    dest: /etc/dnf/keyrings/docker.asc
    mode: '0644'

# Add Docker YUM repository for Oracle Linux (ARM version)
- name: Add Docker YUM repository for ARM architecture
  ansible.builtin.yum_repository:
    name: docker
    description: Docker CE Stable - EL8 ARM
    baseurl: "https://download.docker.com/linux/centos/8/aarch64/stable"
    enabled: true
    gpgcheck: true
    gpgkey: file:///etc/dnf/keyrings/docker.asc

# Install Docker engine and CLI (ARM version)
- name: Install Docker packages for ARM architecture
  ansible.builtin.dnf:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: true

# Install python3-docker via dnf to avoid PEP 668 issues
- name: Install python3-docker using dnf (instead of pip)
  ansible.builtin.dnf:
    name: python3-docker
    state: present

# Check if OCI CLI is already installed via dnf
- name: Install OCI CLI via dnf
  ansible.builtin.dnf:
    name: oci-cli
    state: present

# Validate OCI CLI is available in PATH
- name: Validate OCI CLI is available in PATH
  ansible.builtin.command: oci --version
  register: oci_cli_version
  changed_when: false
