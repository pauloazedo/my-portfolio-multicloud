---
# Common setup tasks for all servers

# === Python Setup ===
- name: Ensure Python 3.7+ is installed
  ansible.builtin.package:
    name: python3
    state: present
  when: ansible_facts.python.version.major < 3 or
        (ansible_facts.python.version.major == 3 and ansible_facts.python.version.minor < 7)

- name: Discover full path to python3 binary
  ansible.builtin.command: which python3
  register: python3_path
  changed_when: false

- name: Register python3 as system default python
  ansible.builtin.command: >
    alternatives --install /usr/bin/python python {{ python3_path.stdout }} 1
  args:
    creates: /etc/alternatives/python
  become: true

- name: Set python3 as system default explicitly
  ansible.builtin.command: alternatives --set python {{ python3_path.stdout }}
  become: true
  changed_when: false

# === Base Packages ===
- name: Install core system packages
  ansible.builtin.package:
    name:
      - git
      - curl
      - unzip
      - wget
      - ca-certificates
      - gnupg
    state: present

# === pip3 Installation (resilient fallback) ===
- name: Try to install python3-pip via package manager
  ansible.builtin.package:
    name: python3-pip
    state: present
  register: pip_pkg_result
  ignore_errors: true

- name: Download get-pip.py fallback installer
  ansible.builtin.get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /tmp/get-pip.py
    mode: '0755'
  when: pip_pkg_result is failed

- name: Install pip3 using get-pip.py fallback
  ansible.builtin.command: python3 /tmp/get-pip.py
  args:
    creates: /usr/local/bin/pip3
  when: pip_pkg_result is failed

- name: Discover final pip3 binary path
  ansible.builtin.shell: |
    command -v pip3 || true
  register: pip3_resolved
  changed_when: false

- name: Set pip3 path for later use
  ansible.builtin.set_fact:
    pip3_path_final: "{{ pip3_resolved.stdout | default('/usr/local/bin/pip3') }}"
  when: pip3_resolved.stdout is defined and pip3_resolved.stdout | length > 0

# === Docker Setup ===
- name: Remove podman-docker shim if present
  ansible.builtin.package:
    name: podman-docker
    state: absent

- name: Add Docker CE YUM repo (OL9 ARM)
  ansible.builtin.yum_repository:
    name: docker-ce
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/9/$basearch/stable
    gpgcheck: true
    gpgkey: https://download.docker.com/linux/centos/gpg
    enabled: true

- name: Install Docker engine and CLI
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Ensure Docker service is enabled and running
  ansible.builtin.service:
    name: docker
    enabled: true
    state: started

# === Docker SDK ===
- name: Install Docker SDK for Python via pip3
  ansible.builtin.pip:
    name: docker
    executable: "{{ pip3_path_final }}"
  when: pip3_path_final is defined

# === OCI CLI Setup ===
- name: Download OCI CLI install script
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
    dest: /tmp/oci-cli-install.sh
    mode: '0755'

- name: Install OCI CLI (as devops user)
  ansible.builtin.command: bash /tmp/oci-cli-install.sh --accept-all-defaults
  args:
    creates: /home/devops/bin/oci
  become: true
  become_user: devops

- name: Confirm OCI CLI installation
  ansible.builtin.command: /home/devops/bin/oci --version
  register: oci_cli_version
  changed_when: false
