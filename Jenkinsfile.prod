pipeline {
  agent any
  environment {
    CLOUD_PROVIDER = 'oci'
    OCIR_REPO = 'iad.ocir.io/idtijq8cx4jl/my-portfolio-site'
    OCIR_USERNAME = 'idtijq8cx4jl/devops.user'
    OCIR_PASSWORD = credentials('ocir-devops-user-token')
    VAULT_PASSFILE = '/var/jenkins_home/.vault_pass.txt'
  }

  stages {
    stage('Checkout Source') {
      steps {
        checkout scm
      }
    }

    stage('Init Environment') {
      steps {
        echo "üß≠ Using CLOUD_PROVIDER=${env.CLOUD_PROVIDER}"
      }
    }

    stage('Discover Latest Tag from OCIR') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'ocir-devops-user-token', usernameVariable: 'OCIR_USER', passwordVariable: 'OCIR_PASSWORD')]) {
          withEnv(["OCIR_AUTH=${env.OCIR_USERNAME}:${env.OCIR_PASSWORD}"]) {
            script {
              def rawTagList = sh(
                script: "skopeo list-tags --creds $OCIR_AUTH docker://${env.OCIR_REPO} | jq -r .Tags[] | sort -V | tail -n1",
                returnStdout: true
              ).trim()

              env.latestTag = rawTagList
              env.imageTag = "${env.OCIR_REPO}:${env.latestTag}"
              echo "‚úÖ Latest OCIR tag: ${env.latestTag}"
              echo "üñºÔ∏è Using image: ${env.imageTag}"
            }
          }
        }
      }
    }

    stage('Deploy Latest Tag to BLUE Container') {
      steps {
        withCredentials([file(credentialsId: 'ansible-vault-pass', variable: 'VAULT_PASSFILE')]) {
          sh """
            /home/jenkins/venv/bin/ansible-playbook \
              -i ansible/inventory/oci.ini ansible/prod.yml \
              --tags check_images,run_blue \
              --extra-vars '{
                "latest_prod_site_tag": "${latestTag}",
                "prod_site_tag": "${imageTag}",
                "prod_site_image": "${imageTag}",
                "prod_site_target": "blue"
              }' \
              --vault-password-file \$VAULT_PASSFILE
          """
        }
      }
    }

    stage('Await Manual Approval to Promote GREEN') {
      steps {
        timeout(time: 2, unit: 'HOURS') {
          input message: "Promote v${env.latestTag} to green?"
        }
      }
    }

    stage('Promote BLUE to GREEN') {
      steps {
        withCredentials([file(credentialsId: 'ansible-vault-pass', variable: 'VAULT_PASSFILE')]) {
          sh """
            /home/jenkins/venv/bin/ansible-playbook \
              -i ansible/inventory/oci.ini ansible/prod.yml \
              --tags run_green \
              --extra-vars '{
                "latest_prod_site_tag": "${latestTag}",
                "prod_site_tag": "${imageTag}",
                "prod_site_image": "${imageTag}",
                "prod_site_target": "green"
              }' \
              --vault-password-file \$VAULT_PASSFILE
          """
        }
      }
    }
  }

  post {
    failure {
      echo "üö® Pipeline failed"
    }
    aborted {
      echo "üõë Pipeline aborted by user"
    }
  }
}